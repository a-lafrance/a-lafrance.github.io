/*! Copyright (c) Epic Systems Corporation 2015-2016 */
window.onerror=function wp$globalErrHandler(c,e,f,d,b){var a;if(c)a='"'+c+'"';else a="unhandled exception";if(b&&b.stack)try{console.error("Stack Trace for "+a+"\r\n"+b.stack);$$WP.Debug._errorCount++;$$WP.Debug._updateErrorCountDisplay()}catch(g){}};$$WP.Utilities.UI.OnUIFrameworkLoaded(function(){!$$WP.Utilities.UI.IsMobile&&$$WP.Debug.CheckForStringResources&&$.ajax({url:makeLink("/Tests/CheckStringResources"),dataType:"json",global:false,error:function(){$$WP.Debug.log("Debug: Couldn't check for missing string resources. /Tests/CheckStringResources is not available.")},success:function(b){var d="<br/>",a="",c,e,f;if(!b.IsSuccess){a+='<div id="missingStringsWarning" style="position: fixed; bottom:10px; left:10px; z-index: 1000000; background-color: #dbff00; border: 2px solid black; color: black; width: auto; padding: 5px; max-height: 50%; overflow-y: scroll;">';a+='<p>Incorrect strings detected in .resx files!!! <a href="#" style="color:black;" data-function="dismiss">[X]</a></p>';a+='<p><a href="#" style="color:black;" data-function="toggleDetails">[+/- details]</a></p>';a+='<div data-contents="details" class="jqHidden">';if(b.MissingStrings&&b.MissingStrings.length>0){a+="~ MISSING ~<br/>";for(c=0;c<b.MissingStrings.length;c++)a+=b.MissingStrings[c]+d}if(b.ModifiedStrings&&b.ModifiedStrings.length>0){a+="~ MODIFIED ~<br/>";for(c=0;c<b.ModifiedStrings.length;c++)a+=b.ModifiedStrings[c]+d}if(b.ExtraStrings&&b.ExtraStrings.length>0){a+="~ UNUSED ~<br/>";for(c=0;c<b.ExtraStrings.length;c++)a+=b.ExtraStrings[c]+d}a+="</div>";a+="</div>";e=dangerou$.parseHtml(a);e.on("click",'[data-function="toggleDetails"]',function(a){a.preventDefault();a.stopPropagation();e.find('[data-contents="details"]').toggle()});e.on("click",'[data-function="dismiss"]',function(a){a.preventDefault();a.stopPropagation();e.remove()});$afe.select("body").safeAppend(e)}}})});$$WP=$$WP||{};$$WP.Debug=$$WP.Debug||{};$$WP.Debug.UnitTest=$$WP.Debug.UnitTest||{};$$WP.Debug.UnitTest.tests=$$WP.Debug.UnitTest.tests||[];$$WP.Debug.Workflow=$$WP.Debug.Workflow||{};$$WP.Debug.Workflow.monitors=$$WP.Debug.Workflow.monitors||{};$$WP.Debug.IsLocalhost=window.location.hostname==="localhost";$$WP.Debug._failedAssertions=0;$$WP.Debug._assertions=0;$$WP.Debug._errorCount=0;$$WP.Debug._$errorCountDisplay=null;$$WP.Debug.log=function WP$Debug$lgMsg(a,c){var b;a=a||"";if($$WP.Debug.IsEnabled)try{b=new Error(a);if(c&&console.trace){console.log($$WP.Debug.messagePrefix+a);console.trace()}else if(c&&"stack"in b)console.log($$WP.Debug.messagePrefix+"\n"+b.stack);else console.log($$WP.Debug.messagePrefix+a)}catch(d){}};$$WP.Debug.logError=function WP$Debug$lgErr(a,b){var c,d;a=a||"";if(typeof b!=="boolean")b=true;if(b){try{console.error($$WP.Debug.messagePrefix+a,"");console.log("Stack Trace for "+(a?'"'+a+'":':"unhandled exception:"));console.trace();d=true}catch(e){try{c=new Error(a);if(c.stack.length>0){console.error($$WP.Debug.messagePrefix+"\n"+c.stack,"");d=true}}catch(f){}}if(!d)try{console.error($$WP.Debug.messagePrefix+a,"")}catch(g){}}else try{console.error($$WP.Debug.messagePrefix+a,"")}catch(h){}$$WP.Debug._errorCount++;$$WP.Debug._updateErrorCountDisplay()};$$WP.Debug._updateErrorCountDisplay=function WP$Debug$_updateErrorCountDisplay(){if($$WP.Debug.IsEnabled){if($$WP.Debug._$errorCountDisplay===null){$$WP.Debug._$errorCountDisplay=$afe.jq(document.createElement("div"));$$WP.Debug._$errorCountDisplay.css({position:"absolute","background-color":"red",color:"white","font-weight":"bold",width:"auto",padding:"1px","margin-left":"2px"});$afe.select("#header").safePrepend($$WP.Debug._$errorCountDisplay)}$$WP.Debug._$errorCountDisplay.empty();$$WP.Debug._$errorCountDisplay.text("Errors in console: "+$$WP.Debug._errorCount)}};$$WP.Debug.ShowNonProdBanner=function $$WP$Debug$ShowNonProdBanner(){if(sessionStorage.HideNonProdBanner==="true")return;message=$$WP.Strings.get("NonProdErrorMessage","global");title=$$WP.Strings.get("NonProdErrorMessageDismissTitle","global");var b="",d,a,c;b+='<div class="highlight" id="nonProdBanner" style="position: fixed; z-index: 99999999; color: white; width: 100%; text-align: center">';b+="<p>"+message+'&nbsp;<a href="#" style="color:white;" data-function="dismiss" title="'+title+'">[X]</a></p>';b+="</div>";a=dangerou$.parseHtml(b);a.on("click",'[data-function="dismiss"]',function(b){sessionStorage.setItem("HideNonProdBanner","true");b.preventDefault();b.stopPropagation();a.remove()});$afe.select("body").prepend(a)};$$WP.Debug._synchronousAjax=function WP$Debug$_syncAjax(b,c){var a;if(typeof b==="object")a=b;else a=c;a=a||{};a.async=false;$$WP.Debug._oldAjax(b,a)};$$WP.Debug.makeAjaxSynchronous=function WP$Debug$mkAjaxSync(){if($$WP.Debug.IsEnabled){if($.ajax===$$WP.Debug._synchronousAjax)return;$$WP.Debug._oldAjax=$$WP.Debug._oldAjax||$.ajax||jQuery.ajax;$.ajax=$$WP.Debug._synchronousAjax}};$$WP.Debug.allowAjaxAsynchronous=function WP$Debug$alwAjaxAsync(){if($.ajax!==$$WP.Debug._synchronousAjax)return;$.ajax=$$WP.Debug._oldAjax};$$WP.Debug.UnitTest.assert=function WP$Debug$asrt(a,b){$$WP.Debug._assertions++;if(!a){$$WP.Debug._failedAssertions++;$$WP.Debug.logError(b,false)}};$$WP.Debug.UnitTest.assertValue=function WP$Debug$asrtVal(a,b,c){$$WP.Debug.UnitTest.assert(a===b,c+"(expected '"+a+"', got '"+b+"')")};$$WP.Debug.UnitTest.cssClassesMatch=function WP$Debug$cssClassesMatch(d,a){var b,c;b=d.safeAttr("class").split(" ");a=a.split(" ");if(a.length!==b.length)return false;b.sort();a.sort();for(c=0;c<b.length;c++)if(b[c]!==a[c])return false;return true};$$WP.Debug.UnitTest.resetCounters=function WP$Debug$rstCntrs(){$$WP.Debug._failedAssertions=0;$$WP.Debug._assertions=0};$$WP.Debug.UnitTest.getFailedAssertionCount=function WP$Debug$gtAsrtFailCnt(){return $$WP.Debug._failedAssertions};$$WP.Debug.UnitTest.runAll=function WP$Debug$untTst$rnAl(j){var n='<td style="font-size: 1.2rem; text-align: left; width: 70%; color: white; background-color: red">Test failed ',m="XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Test Failed XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";if($$WP.Debug.IsEnabled){var a,e,c,h,l,o,g,f,d,b,i,k;j=j||$afe.select("body");k=$$WP.SimpleTemplates.WarningIcon({"class":"",style:"margin-top: 3px;"});a=$afe.select("#WP-Debug-UnitTest-TestingRange");if(a.length!==0){e=a.find('table[name="resultsTable"]');e.empty();c=a.find('div[name="sandbox"]');c.empty()}else{a=$$WP.SimpleTemplates.Div({id:"WP-Debug-UnitTest-TestingRange"});e=dangerou$.parseHtml('<table name="resultsTable" style="width: 100%; margin: auto; background-color:white; border:1px solid black;"><tr style="border:1px solid black;"><th style="font-weight:bold; font-size:1.2rem;">Test name</th><th style="font-weight:bold; font-size:1.2rem;">Result</th></tr></table>');c=$$WP.SimpleTemplates.Div({name:"sandbox"});j.safeAppend(a);a.safeAppend(e);a.safeAppend(c)}for(h=0;h<$$WP.Debug.UnitTest.tests.length;h++){l=$$WP.Debug.UnitTest.tests[h];$$WP.Debug.UnitTest.resetCounters();i=false;try{l(c)}catch(p){$$WP.Debug.log(p.stack);i=true}f=$$WP.Debug.UnitTest.getFailedAssertionCount();d=$$WP.Debug._assertions;if(i){$$WP.Debug.log(m);b=dangerou$.parseHtml(n+f+" of "+d+" checks. Did not run the entire test due to an unhandled exception.<br/>See console for more details</td>");b.find("td").safePrepend(k)}else if(f>0){$$WP.Debug.log(m);b=dangerou$.parseHtml(n+f+" of "+d+" checks. See console for more details.</td>");b.find("td").safePrepend(k)}else if(d===0){$$WP.Debug.log("No test cases defined for this module.");b=dangerou$.parseHtml('<td style="font-size: 1.2rem; text-align: left; width: 70%; color: white; background-color: orange">No test cases defined for this module.</td>')}else b=dangerou$.parseHtml('<td style="font-size: 1.2rem; text-align: left; width: 70%; color: white; background-color: green">Test passed all '+d+" checks</td>");c.empty();g=dangerou$.parseHtml("<tr></tr>");o=l.name||"Test";g.safeAppend(dangerou$.parseHtml('<td style="width:30%; font-weight:bold; font-size:1.2rem; text-align:left;">'+o.replace(/UnitTests\$/,"")+"</td>"));g.safeAppend(b);e.safeAppend(g)}}};$$WP.Debug.Workflow.addMonitor=function WP$Debug$Workflow$addMonitor(b,a){if($$WP.Debug.IsEnabled)$$WP.Debug.Workflow.monitors[b]=a};$$WP.Debug.Workflow.removeMonitor=function WP$Debug$Workflow$removeMonitor(a){if($$WP.Debug.IsEnabled)delete $$WP.Debug.Workflow.monitors[a]};$$WP.Debug.initialize=function WP$Debug$init(b,a){$$WP.Debug.ShouldEnableOnLocalhost=b;$$WP.Debug.ShouldEnableOnAllDomains=a;$$WP.Debug.IsEnabled=$$WP.Debug.ShouldEnableOnLocalhost&&$$WP.Debug.IsLocalhost||$$WP.Debug.ShouldEnableOnAllDomains;if($$WP.Debug.ShouldEnableOnAllDomains){$$WP.Debug.messagePrefix="[Debug.js FULL DEBUG] ";$$WP.Debug.log("JavaScript debugging messages are enabled on all domains (this setting can be changed in Scripts/Core/Debug.js)")}else{$$WP.Debug.messagePrefix="[Debug.js LOCALHOST DEBUG] ";$$WP.Debug.log("JavaScript debugging messages are enabled on 'localhost' only (this setting can be changed in Scripts/Core/Debug.js)")}};$$WP.Debug.initialize(true,false)